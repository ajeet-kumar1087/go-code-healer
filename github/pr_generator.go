package github

import (
	"fmt"
	"strings"
	"time"
)

// PRResult represents the result of creating a pull request
type PRResult struct {
	URL    string `json:"url"`
	Number int    `json:"number"`
	Title  string `json:"title"`
}

// GenerateBranchName creates a descriptive branch name for the panic fix
func GenerateBranchName(panicEvent PanicEvent) string {
	// Extract filename from full path
	parts := strings.Split(panicEvent.SourceFile, "/")
	filename := parts[len(parts)-1]

	// Remove file extension
	if idx := strings.LastIndex(filename, "."); idx != -1 {
		filename = filename[:idx]
	}

	// Create branch name with panic context
	branchName := fmt.Sprintf("fix/panic-%s-line-%d", filename, panicEvent.LineNumber)

	// Replace invalid characters
	branchName = strings.ReplaceAll(branchName, " ", "-")
	branchName = strings.ReplaceAll(branchName, "_", "-")
	branchName = strings.ToLower(branchName)

	return branchName
}

// GeneratePRTitle creates a descriptive title for the pull request
func GeneratePRTitle(panicEvent PanicEvent) string {
	parts := strings.Split(panicEvent.SourceFile, "/")
	filename := parts[len(parts)-1]

	return fmt.Sprintf("Fix panic in %s at line %d", filename, panicEvent.LineNumber)
}

// GeneratePRDescription creates a comprehensive description for the pull request
func GeneratePRDescription(panicEvent PanicEvent, fixResponse *FixResponse) string {
	var description strings.Builder

	description.WriteString("## Automatic Panic Fix\n\n")
	description.WriteString("This pull request contains an automatically generated fix for a runtime panic.\n\n")

	description.WriteString("### Panic Details\n")
	description.WriteString(fmt.Sprintf("- **Error**: %s\n", panicEvent.Error))
	description.WriteString(fmt.Sprintf("- **Location**: %s:%d\n", panicEvent.SourceFile, panicEvent.LineNumber))
	description.WriteString(fmt.Sprintf("- **Function**: %s\n", panicEvent.Function))
	description.WriteString(fmt.Sprintf("- **Timestamp**: %s\n\n", panicEvent.Timestamp.Format(time.RFC3339)))

	if fixResponse != nil {
		description.WriteString("### AI-Generated Fix\n")
		description.WriteString(fmt.Sprintf("**Confidence**: %.1f%%\n\n", fixResponse.Confidence*100))
		description.WriteString("**Explanation**:\n")
		description.WriteString(fixResponse.Explanation)
		description.WriteString("\n\n")

		description.WriteString("### Proposed Changes\n")
		description.WriteString("```go\n")
		description.WriteString(fixResponse.ProposedFix)
		description.WriteString("\n```\n\n")
	}

	description.WriteString("### Stack Trace\n")
	description.WriteString("```\n")
	description.WriteString(panicEvent.StackTrace)
	description.WriteString("\n```\n\n")

	description.WriteString("---\n")
	description.WriteString("*This PR was automatically generated by Go Code Healer*")

	return description.String()
}
